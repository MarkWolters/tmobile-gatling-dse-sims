package feeds.tmobile.payment.cql

import com.datastax.gatling.stress.core.BaseFeed
import com.typesafe.scalalogging.LazyLogging

class Payment_Transactions_Detail_Feed
  extends BaseFeed with LazyLogging {


  def getPayment_Transaction_Details = {
    def rowData = this.getRowData

    Iterator.continually(rowData)
  }

  def getRowData = {

    val bigint_size = 12

    Map(
      "dps_payment_id"	-> getRandomNumber(bigint_size).toInt,
      "process_id"	-> getRandomNumber(bigint_size).toString,
      "accuity_abarouting_number"	-> getRandomNumber(bigint_size).toString,
      "acquirer_approval_code"	-> getRandomNumber(bigint_size).toString,
      "acquirer_avs_responsecode"	-> getRandomNumber(bigint_size).toString,
      "acquirer_cvv_responsecode"	-> getRandomNumber(bigint_size).toString,
      "acquirer_name"	-> getRandomNumber(bigint_size).toString,
      "acquirer_parent_payment_id"	-> getRandomNumber(bigint_size).toString,
      "acquirer_payment_id"	-> getRandomNumber(bigint_size).toString,
      "address_matched"	-> getRandomNumber(bigint_size).toString,
      "amount"	-> getRandomNumber(bigint_size).toDouble,
      "application_id"	-> getRandomNumber(bigint_size).toString,
      "auth_hold_revrsal_action"	-> getRandomNumber(bigint_size).toString,
      "authorized_amount"		-> getRandomNumber(bigint_size).toDouble,
      "bank_name"	-> getRandomNumber(bigint_size).toString,
      "batch_id"	-> getRandomNumber(bigint_size).toString,
      "bill_due_date"	-> getCurrentTimestamp,
      "biller_code"	-> getRandomNumber(bigint_size).toString,
      "billing_account_number"	-> getRandomNumber(bigint_size).toString,
      "business_segment"	-> getRandomNumber(bigint_size).toString,
      "business_unit"	-> getRandomNumber(bigint_size).toString,
      "card_brand"	-> getRandomNumber(bigint_size).toString,
      "card_first_6"	-> getRandomNumber(bigint_size).toString,
      "card_last_4"	-> getRandomNumber(bigint_size).toString,
      //"card_present"	-> faker.bool(),
      "channel_id"	-> getRandomNumber(bigint_size).toString,
      "charge_source"	-> getRandomNumber(bigint_size).toString,
      "chargeback_export_destination"	-> getRandomNumber(bigint_size).toString,
      "chargeback_export_status"	-> getRandomNumber(bigint_size).toString,
      "client_id"	-> getRandomNumber(bigint_size).toString,
      "common_customer_id"	-> getRandomNumber(bigint_size).toString,
      "created_by"	-> getRandomNumber(bigint_size).toString,
      "created_date"	-> getCurrentTimestamp,
      "customer_mobile_phone"	-> getRandomNumber(bigint_size).toString,
      "customer_name"	-> getRandomNumber(bigint_size).toString,
      //"customer_present"	-> faker.bool(),
      "dps_response_code"	-> getRandomNumber(bigint_size).toString,
      "dps_response_message"	-> getRandomNumber(bigint_size).toString,
      "dps_shortcode"	-> getRandomNumber(bigint_size).toString,
      "entrymode"	-> getRandomNumber(bigint_size).toString,
      "expiration_date"	-> getRandomNumber(bigint_size).toString,
      "fraud_check_transaction_id"	-> getRandomNumber(bigint_size).toString,
      "fraud_decision_status"	-> getRandomNumber(bigint_size).toString,
      "guid text"	-> getRandomNumber(bigint_size).toString,
      "import_batch_id"	-> getRandomNumber(bigint_size).toString,
      "legacytoken"	-> getRandomNumber(bigint_size).toString,
      "local_transaction_time"	-> getCurrentTimestamp,
      "manager_login_id"	-> getRandomNumber(bigint_size).toString,
      "merchant_routing_id"	-> getRandomNumber(bigint_size).toString,
      "modified_by"	-> getRandomNumber(bigint_size).toString,
      "modified_date"	-> getCurrentTimestamp,
      "operation_type"	-> getRandomNumber(bigint_size).toString,
      "operator_id"	-> getRandomNumber(bigint_size).toString,
      "order_number"	-> getRandomNumber(bigint_size).toString,
      "order_type"	-> getRandomNumber(bigint_size).toString,
      "parent_order_id"	-> getRandomNumber(bigint_size).toString,
      "parent_payment_id"	-> getRandomNumber(bigint_size).toInt,
      "payment_instrument_account_number"	-> getRandomNumber(bigint_size).toString,
      "payment_instrument_category"	-> getRandomNumber(bigint_size).toString,
      "payment_instrument_holder_firstname"	-> getRandomNumber(bigint_size).toString,
      "payment_instrument_holder_fullname"	-> getRandomNumber(bigint_size).toString,
      "payment_instrument_holder_lastname"	-> getRandomNumber(bigint_size).toString,
      "payment_instrument_holder_phonenumber"	-> getRandomNumber(bigint_size).toString,
      "payment_method_code"	-> getRandomNumber(bigint_size).toString,
      "payment_type_code"	-> getRandomNumber(bigint_size).toString,
      "posting_destination"	-> getRandomNumber(bigint_size).toString,
      "posting_status"	-> getRandomNumber(bigint_size).toString,
      "prepaid_available_balance"	-> getRandomNumber(bigint_size).toString,
      //"prepaid_card_indicator"	-> faker.bool(),
      "product_group"	-> getRandomNumber(bigint_size).toString,
      "program_code"	-> getRandomNumber(bigint_size).toString,
      "refunded_amount"	-> getRandomNumber(bigint_size).toDouble,
      "remaining_balance"	-> getRandomNumber(bigint_size).toDouble,
      "reversal_action"	-> getRandomNumber(bigint_size).toString,
      "routing_number"	-> getRandomNumber(bigint_size).toString,
      "settlement_batch_id"	-> getRandomNumber(bigint_size).toString,
      //"settlement_required "	-> faker.bool(),
      "settlement_status"	-> getRandomNumber(bigint_size).toString,
      "status"	-> getRandomNumber(bigint_size).toString,
      "status_modified_date"	-> getCurrentTimestamp,
      "store_id"	-> getRandomNumber(bigint_size).toString,
      //"stored_payment_indicator"	-> faker.bool(),
      "surcharge_amount"	-> getRandomNumber(bigint_size).toDouble,
      "tax_amount"	-> getRandomNumber(bigint_size).toDouble,
      "terminalid"	-> getRandomNumber(bigint_size).toString,
      //"termscond_accepted"	-> faker.bool(),
      "termscond_accepted_timestamp"	-> getCurrentTimestamp,
      "termscond_application_id"	-> getRandomNumber(bigint_size).toString,
      "timeout_reversal"	-> getRandomNumber(bigint_size).toString,
      "tmotoken"	-> getRandomNumber(bigint_size).toString,
      "transaction_date"	-> getCurrentTimestamp,
      "transaction_type"	-> getRandomNumber(bigint_size).toString,
      "void_reason"	-> getRandomNumber(bigint_size).toString,
      "zip_matched"	-> getRandomNumber(bigint_size).toString
    )
  }

  def getRandomNumber(digits:Int) = {
    System.nanoTime()
  }
}

/*

CREATE TABLE payments.payment_transactions_detail (
    dps_payment_id bigint,
    process_id text,
    accuity_abarouting_number text,
    acquirer_approval_code text,
    acquirer_avs_responsecode text,
    acquirer_cvv_responsecode text,
    acquirer_name text,
    acquirer_parent_payment_id text,
    acquirer_payment_id text,
    address_matched text,
    amount double,
    application_id text,
    auth_hold_revrsal_action text,
    authorized_amount double,
    bank_name text,
    batch_id text,
    bill_due_date date,
    biller_code text,
    billing_account_number text,
    business_segment text,
    business_unit text,
    card_brand text,
    card_first_6 text,
    card_last_4 text,
    card_present boolean,
    channel_id text,
    charge_source text,
    chargeback_export_destination text,
    chargeback_export_status text,
    client_id text,
    common_customer_id text,
    created_by text,
    created_date timestamp,
    customer_mobile_phone text,
    customer_name text,
    customer_present boolean,
    dps_response_code text,
    dps_response_message text,
    dps_shortcode text,
    entrymode text,
    expiration_date text,
    fraud_check_transaction_id text,
    fraud_decision_status text,
    guid text,
    import_batch_id text,
    legacytoken text,
    local_transaction_time timestamp,
    manager_login_id text,
    merchant_routing_id text,
    modified_by text,
    modified_date timestamp,
    operation_type text,
    operator_id text,
    order_number text,
    order_type text,
    parent_order_id text,
    parent_payment_id bigint,
    payment_instrument_account_number text,
    payment_instrument_category text,
    payment_instrument_holder_firstname text,
    payment_instrument_holder_fullname text,
    payment_instrument_holder_lastname text,
    payment_instrument_holder_phonenumber text,
    payment_method_code text,
    payment_type_code text,
    posting_destination text,
    posting_status text,
    prepaid_available_balance text,
    prepaid_card_indicator boolean,
    product_group text,
    program_code text,
    refunded_amount double,
    remaining_balance double,
    reversal_action text,
    routing_number text,
    settlement_batch_id text,
    settlement_required boolean,
    settlement_status text,
    status text,
    status_modified_date timestamp,
    store_id text,
    stored_payment_indicator boolean,
    surcharge_amount double,
    tax_amount double,
    terminalid text,
    termscond_accepted boolean,
    termscond_accepted_timestamp timestamp,
    termscond_application_id text,
    timeout_reversal text,
    tmotoken text,
    transaction_date timestamp,
    transaction_type text,
    void_reason text,
    zip_matched text,
    PRIMARY KEY (dps_payment_id, process_id)
) WITH CLUSTERING ORDER BY (process_id ASC)

 */