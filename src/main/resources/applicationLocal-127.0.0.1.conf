general {
  dataDir = /home/apesa/Documents
} # end general settings

cassandra {

  hosts = ["127.0.0.1"]
  dcName = Cassandra
  clusterName = GatlingTarget
  defaultKeyspace = payments_tst
  defaultConsistency = LOCAL_QUORUM

  auth = {
    username = cassandra
    password = "cassandra"
  }
}  # end cassandra settings

simulations {

  // 1 Acquirer_Transactions_Detail_Simulation
  acquirer_transaction_configuration {

    createKeyspace {
      topology = SimpleStrategy
      replication = 1
    }

    defaults {
      keyspace = payments_tst
      table = acquirer_transactions_detail
      perPartitionDisabled = false
      tokenRangesPerHost = 8
      paginationSize = 100
      maxPartitionKeys = 500
      appendToFile = false
      partitionKeyColumns = [dps_payment_id]
      columnsToFetch = [dps_payment_id, process_id, acquirer_api, acquirer_name, acquirer_parent_payment_id, acquirer_paymentid, acquirer_response_code]
      usersRampTime = 10s
      usersConstantTime = 50s
      usersConstantCnt = 10
    }

    acq_Trans_Payment_Write {
      usersConstantCnt = 10
    }
    acq_Trans_Payment_Read {
      dataFile = Acquirer_Transactions_Detail_Load20.csv
      usersConstantCnt = 25
    }
  }

  // 2 Batch_payment_transaction_details_Simulation
  batch_payment_transaction_details_configuration {

    createKeyspace {
      topology = SimpleStrategy
      replication = 1
    }

    defaults {
      keyspace = payments_tst
      table = batch_payment_transaction_details
      perPartitionDisabled = false
      tokenRangesPerHost = 8
      paginationSize = 100
      maxPartitionKeys = 500
      appendToFile = false
      partitionKeyColumns = [dps_payment_id]
      columnsToFetch = [dps_payment_id, tmotoken, account_number, batch_id, account_name, acquirer_response_code]
      usersRampTime = 10s
      usersConstantTime = 50s
      usersConstantCnt = 10
    }

    btch_Trans_Details_Payment_Write {
      usersConstantCnt = 10
    }

    btch_Trans_Details_Payment_Read {
      dataFile = btch_Trans_Details_Load20.csv
      usersConstantCnt = 25
    }
  }

  // 3 Batch_pymt_txn_dtls_by_batchid_Simulation
  Batch_pymt_txn_dtls_by_batchid_configuration {

    createKeyspace {
      topology = SimpleStrategy
      replication = 1
    }

    defaults {
      keyspace = payments_tst
      table = batch_pymt_txn_dtls_by_batchid
      perPartitionDisabled = false
      tokenRangesPerHost = 8
      paginationSize = 100
      maxPartitionKeys = 500
      appendToFile = false
      partitionKeyColumns = [batch_id]
      columnsToFetch = [batch_id, tmotoken, account_number, dps_payment_id, account_name, acquirer_message, acquirer_name]
      usersRampTime = 10s
      usersConstantTime = 50s
      usersConstantCnt = 10
    }

    btch_Trans_Details_Btchid_Payment_Write {
      usersConstantCnt = 10
    }


    btch_Trans_Details_Btchid_Payment_Read {
      dataFile = btch_Trans_Details_Batchid_Load20.csv
      usersConstantCnt = 25
    }
  }
  // 10 Wallet_Simulation
  Wallet_Simulation_configuration {

    createKeyspace {
      topology = SimpleStrategy
      replication = 3
    }

    defaults {
      keyspace = payments_tst
      table = wallet
      perPartitionDisabled = false
      tokenRangesPerHost = 8
      paginationSize = 100
      maxPartitionKeys = 500
      appendToFile = false
      partitionKeyColumns = [billing_account_number, common_customer_id]
      columnsToFetch = [billing_account_number, common_customer_id, wallet_id, created_by, created_by, created_date, modified_by, modified_date]
      usersRampTime = 10s
      usersConstantTime = 50s
      usersConstantCnt = 25
    }

    Wallet_Simulation_Payment_Write {
      usersConstantCnt = 22
    }


    Wallet_Simulation_Payment_Read {
      dataFile = Wallet_Simulation_Load20.csv
      usersConstantCnt = 25
    }
  }
  // 4 Payment_duplicate_check_Simulation
  Payment_duplicate_check_configuration {

    createKeyspace {
      topology = SimpleStrategy
      replication = 3
    }

    defaults {
      keyspace = payments_tst
      table = payment_duplicate_check
      perPartitionDisabled = false
      tokenRangesPerHost = 8
      paginationSize = 100
      maxPartitionKeys = 500
      appendToFile = false
      partitionKeyColumns = [transaction_type, application_id]
      columnsToFetch = [Payment_duplicate_check_, application_id, amount, billing_account_number, common_customer_id, transaction_date]
      usersRampTime = 10s
      usersConstantTime = 50s
      usersConstantCnt = 10000
    }

    Payment_duplicate_check_PaymentWrite {
      usersConstantCnt = 10
    }


    Payment_duplicate_check_PaymentRead {
      dataFile = Payment_duplicate_check_Load20.csv
      usersConstantCnt = 25
    }
  }
}